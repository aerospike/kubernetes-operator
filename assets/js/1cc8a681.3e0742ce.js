"use strict";(self.webpackChunkwebsite_operator=self.webpackChunkwebsite_operator||[]).push([[8709],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=l(r),m=a,k=f["".concat(c,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(k,s(s({ref:t},p),{},{components:r})):n.createElement(k,s({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6873:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return f}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),s=["components"],i={title:"Manage TLS Certificates",description:"Manage TLS Certificates"},c=void 0,l={unversionedId:"Manage-TLS-Certificates",id:"Manage-TLS-Certificates",title:"Manage TLS Certificates",description:"Manage TLS Certificates",source:"@site/docs/Manage-TLS-Certificates.md",sourceDirName:".",slug:"/Manage-TLS-Certificates",permalink:"/kubernetes-operator/next/Manage-TLS-Certificates",editUrl:"https://github.com/aerospike/kubernetes-operator/edit/main/docs/Manage-TLS-Certificates.md",tags:[],version:"current",frontMatter:{title:"Manage TLS Certificates",description:"Manage TLS Certificates"},sidebar:"docsSidebar",previous:{title:"Delete Aerospike Cluster",permalink:"/kubernetes-operator/next/Delete-Aerospike-cluster"},next:{title:"Storage Provisioning",permalink:"/kubernetes-operator/next/Storage-provisioning"}},p=[{value:"Rotate TLS Certs",id:"rotate-tls-certs",children:[],level:2}],u={toc:p};function f(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To set up a TLS-enabled Aerospike cluster, first use kubectl to create a Kubernetes Secret which contains the TLS certificates and key. For example, the command create a Secret from the contents of the ",(0,o.kt)("inlineCode",{parentName:"p"},"config/samples/secrets")," folder is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create secret generic aerospike-secret --from-file=config/samples/secrets -n aerospike\n")),(0,o.kt)("p",null,"See the Aerospike documentation for ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docs/operations/configure/network/tls/index.html"},"more details on Aerospike TLS configuration"),"."),(0,o.kt)("p",null,"Next, add the TLS-specific configuration to the Aerospike cluster's CR file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"  storage:\n    filesystemVolumePolicy:\n      cascadeDelete: true\n      initMethod: deleteFiles\n    volumes:\n      - name: workdir\n        aerospike:\n          path: /opt/aerospike\n        source:\n          persistentVolume:\n            storageClass: ssd\n            volumeMode: Filesystem\n            size: 1Gi\n      - name: ns\n        aerospike:\n          path: /opt/aerospike/data\n        source:\n          persistentVolume:\n            storageClass: ssd\n            volumeMode: Filesystem\n            size: 3Gi\n      - name: aerospike-config-secret\n        source:\n          secret:\n            secretName: aerospike-secret\n        aerospike:\n          path: /etc/aerospike/secret\n\n  aerospikeConfig:\n    service:\n      feature-key-file: /etc/aerospike/secret/features.conf\n    security:\n      enable-security: true\n    network:\n      service:\n        tls-name: aerospike-a-0.test-runner\n        tls-authenticate-client: any\n        tls-port: 4333\n      heartbeat:\n        tls-name: aerospike-a-0.test-runner\n        tls-port: 3012\n      fabric:\n        tls-name: aerospike-a-0.test-runner\n        tls-port: 3011\n      tls:\n        - name: aerospike-a-0.test-runner\n          cert-file: /etc/aerospike/secret/svc_cluster_chain.pem\n          key-file: /etc/aerospike/secret/svc_key.pem\n          ca-file: /etc/aerospike/secret/cacert.pem\n\n")),(0,o.kt)("p",null,"For the full CR file, see the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-kubernetes-operator/blob/master/config/samples/tls_cluster_cr.yaml"},"example TLS cluster CR"),"."),(0,o.kt)("p",null,"This and other example CRs are stored in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-kubernetes-operator/tree/master/config/samples"},"the main Aerospike Kubernetes Operator repository"),"."),(0,o.kt)("p",null,"Save and exit the file, then use kubectl to apply the change."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f aerospike-cluster.yaml\n")),(0,o.kt)("h2",{id:"rotate-tls-certs"},"Rotate TLS Certs"),(0,o.kt)("p",null,"To change the TLS certificate, first update the TLS file(s) which contain the certificates and keys. Use the same filename(s) you originally added to the ",(0,o.kt)("inlineCode",{parentName:"p"},"secrets")," folder."),(0,o.kt)("p",null,"Then update the Secret from that folder with the command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create secret generic aerospike-secret --from-file=. -n aerospike --dry-run=client -o yaml | kubectl apply -f -\n")),(0,o.kt)("p",null,"Kubernetes automatically syncs Secrets and config maps on the pods at regular intervals ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/configuration/secret/#mounted-secrets-are-updated-automatically"},"as described here in the official Kubernetes documentation"),". After Kubernetes syncs the Secret onto the pod, Aerospike Server will pick up the new TLS certificates and use them for newer connections created from that point on."))}f.isMDXComponent=!0}}]);