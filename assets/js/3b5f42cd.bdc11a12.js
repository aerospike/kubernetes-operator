"use strict";(self.webpackChunkwebsite_operator=self.webpackChunkwebsite_operator||[]).push([[9045],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return m}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),c=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(p.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),f=c(t),m=o,d=f["".concat(p,".").concat(m)]||f[m]||l[m]||i;return t?n.createElement(d,a(a({ref:r},u),{},{components:t})):n.createElement(d,a({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2355:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var n=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],s={title:"Warm restart",description:"Warm restart Aerospike Server on Aerospike configuration change"},p=void 0,c={unversionedId:"Warm-restart",id:"Warm-restart",title:"Warm restart",description:"Warm restart Aerospike Server on Aerospike configuration change",source:"@site/docs/Warm-restart.md",sourceDirName:".",slug:"/Warm-restart",permalink:"/kubernetes-operator/Warm-restart",editUrl:"https://github.com/aerospike/kubernetes-operator/edit/main/docs/Warm-restart.md",tags:[],version:"current",frontMatter:{title:"Warm restart",description:"Warm restart Aerospike Server on Aerospike configuration change"},sidebar:"docsSidebar",previous:{title:"Aerospike Access Control",permalink:"/kubernetes-operator/Aerospike-access-control"},next:{title:"Modify Aerospike cluster",permalink:"/kubernetes-operator/Aerospike-configuration-change"}},u=[{value:"Aerospike Server 5.7.0.9 and later",id:"aerospike-server-5709-and-later",children:[],level:2},{value:"Aerospike Server 5.7.0.8 and prior",id:"aerospike-server-5708-and-prior",children:[],level:2}],l={toc:u};function f(e){var r=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Aerospike operator 2.0.0 allows for warm restart of Aerospike pods on changes to the Aerospike server configuration in the ",(0,i.kt)("a",{parentName:"p",href:"/kubernetes-operator/Cluster-configuration-settings#aerospike-config"},"Aerospike Config Section")," of your custom resource.\nThis feature requires Aerospike server container images that use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/aerospike/tini"},"tini")," as the ",(0,i.kt)("inlineCode",{parentName:"p"},"init")," process. "),(0,i.kt)("h2",{id:"aerospike-server-5709-and-later"},"Aerospike Server 5.7.0.9 and later"),(0,i.kt)("p",null,"Container images for Aerospike enterprise server 5.7.0.9 and later use tini init by default and will warm restart on Aerospike configuration changes.  "),(0,i.kt)("h2",{id:"aerospike-server-5708-and-prior"},"Aerospike Server 5.7.0.8 and prior"),(0,i.kt)("p",null,"For Aerospike enterprise server 5.7.0.8 and prior, container images that use tini have been tagged with the prefix 'tinistaticbackport'."),(0,i.kt)("p",null,"E.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"aerospike/aerospike-server-enterprise:tinistaticbackport-5.7.0.8\n")))}f.isMDXComponent=!0}}]);