"use strict";(self.webpackChunkwebsite_operator=self.webpackChunkwebsite_operator||[]).push([[3093],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=o,k=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(k,i(i({ref:t},c),{},{components:r})):n.createElement(k,i({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6093:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],s={title:"Monitoring",description:"Monitoring"},p=void 0,l={unversionedId:"Monitoring",id:"Monitoring",title:"Monitoring",description:"Monitoring",source:"@site/docs/Monitoring.md",sourceDirName:".",slug:"/Monitoring",permalink:"/kubernetes-operator/Monitoring",editUrl:"https://github.com/aerospike/kubernetes-operator/edit/main/docs/Monitoring.md",tags:[],version:"current",frontMatter:{title:"Monitoring",description:"Monitoring"},sidebar:"docsSidebar",previous:{title:"Multiple Aerospike Clusters",permalink:"/kubernetes-operator/Multiple-Aerospike-clusters"},next:{title:"XDR",permalink:"/kubernetes-operator/XDR"}},c=[{value:"Add Aerospike Prometheus Exporter Sidecar",id:"add-aerospike-prometheus-exporter-sidecar",children:[],level:2},{value:"Prometheus Configuration",id:"prometheus-configuration",children:[],level:2},{value:"Dashboards",id:"dashboards",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],u={toc:c};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docs/tools/monitorstack/index.html"},"Aerospike Monitoring Stack")," is a useful way to enable monitoring and alerts for Aerospike clusters deployed by the Aerospike Kubernetes Operator."),(0,a.kt)("h2",{id:"add-aerospike-prometheus-exporter-sidecar"},"Add Aerospike Prometheus Exporter Sidecar"),(0,a.kt)("p",null,"Add the exporter as a sidecar to each Aerospike server pod using the ",(0,a.kt)("a",{parentName:"p",href:"/kubernetes-operator/Cluster-configuration-settings#pod-spec"},"PodSpec configuration"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n .\n .\n .\n\n  podSpec:\n    sidecars:\n     - name: aerospike-prometheus-exporter\n       image: aerospike/aerospike-prometheus-exporter:1.3.0\n       ports:\n         - containerPort: 9145\n           name: aerospike-prometheus-exporter\n\n .\n .\n .\n")),(0,a.kt)("p",null,"Create or update your clusters after you add the Prometheus exporter sidecar."),(0,a.kt)("h2",{id:"prometheus-configuration"},"Prometheus Configuration"),(0,a.kt)("p",null,"Configure Prometheus to add exporter endpoints as scrape targets."),(0,a.kt)("p",null,"If Prometheus is also running on Kubernetes, you can configure it to extract exporter targets from the Kubernetes API."),(0,a.kt)("p",null,"In the following example, Prometheus discovers and adds exporter targets in the ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," namespace which has endpoint port name of ",(0,a.kt)("inlineCode",{parentName:"p"},"aerospike-prometheus-exporter"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"scrape_configs:\n  - job_name: 'aerospike'\n\n    kubernetes_sd_configs:\n    - role: endpoints\n      namespaces:\n        names:\n        - default\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_endpoint_port_name]\n      separator: ;\n      regex: aerospike-prometheus-exporter\n      replacement: $1\n      action: keep\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docs/tools/monitorstack/index.html"},"Aerospike Monitoring Stack documentation")," for more information on installing and configuring the Aerospike Monitoring Stack."),(0,a.kt)("h2",{id:"dashboards"},"Dashboards"),(0,a.kt)("p",null,"To view the metrics, we recommend you import our pre-made Grafana dashboards from the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-monitoring/tree/master/config/grafana/dashboards"},"Aerospike Monitoring GitHub Repo"),"."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"This example demonstrates how to use the Aerospike Monitoring Stack to monitor Aerospike clusters deployed by the Aerospike Kubernetes Operator."),(0,a.kt)("p",null,"Deploy the Aerospike Kubernetes Operator using OLM ",(0,a.kt)("a",{parentName:"p",href:"/kubernetes-operator/create-cluster-kubectl"},"as described in the Getting Started section"),"."),(0,a.kt)("p",null,"Create a Kubernetes Secret ",(0,a.kt)("inlineCode",{parentName:"p"},"aerospike-license")," to store the Aerospike license feature key file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create secret generic aerospike-license --from-file=[path to the features.conf-file]\n")),(0,a.kt)("p",null,"To deploy an Aerospike cluster with an Aerospike Prometheus Exporter sidecar, add the following to the podSpec section of the cluster's CR file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"podSpec:\n  multiPodPerHost: true\n  sidecars:\n   - name: aerospike-prometheus-exporter\n     image: aerospike/aerospike-prometheus-exporter:1.3.0\n     ports:\n       - containerPort: 9145\n         name: aerospike-prometheus-exporter\n\n")),(0,a.kt)("p",null,"Use kubectl to apply the change."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f aerospike-cluster.yaml\n")),(0,a.kt)("p",null,"Deploy Prometheus-Grafana Stack using ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docs/cloud/assets/aerospike-monitoring-stack.yaml"},"aerospike-monitoring-stack.yaml"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f aerospike-monitoring-stack.yaml\n")),(0,a.kt)("p",null,"Connect to the Grafana dashboard."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl port-forward service/aerospike-monitoring-stack-grafana 3000:80\n")),(0,a.kt)("p",null,"Open a browser window and go to ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost:3000"),". Log into Grafana with username ",(0,a.kt)("inlineCode",{parentName:"p"},"admin")," and password ",(0,a.kt)("inlineCode",{parentName:"p"},"admin"),"."),(0,a.kt)("p",null,"To view the metrics, we recommend you import dashboards from the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-monitoring/tree/master/config/grafana/dashboards"},"Aerospike Monitoring GitHub Repo"),"."))}m.isMDXComponent=!0}}]);