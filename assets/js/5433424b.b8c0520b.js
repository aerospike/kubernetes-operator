"use strict";(self.webpackChunkwebsite_operator=self.webpackChunkwebsite_operator||[]).push([[3121],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9259:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={title:"All-Flash",description:"Example config file for a setup where Aerospike data and index both use flash storage."},l=void 0,p={unversionedId:"all-flash",id:"all-flash",isDocsHomePage:!1,title:"All-Flash",description:"Example config file for a setup where Aerospike data and index both use flash storage.",source:"@site/docs/all-flash.md",sourceDirName:".",slug:"/all-flash",permalink:"/kubernetes-operator/next/all-flash",editUrl:"https://github.com/aerospike/kubernetes-operator/edit/main/docs/all-flash.md",tags:[],version:"current",frontMatter:{title:"All-Flash",description:"Example config file for a setup where Aerospike data and index both use flash storage."},sidebar:"docsSidebar",previous:{title:"Scaling Namespace Storage",permalink:"/kubernetes-operator/next/Scaling-namespace-storage"},next:{title:"Data In Memory",permalink:"/kubernetes-operator/next/Data-in-memory"}},c=[],u={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This example creates a cluster where Aerospike data and index both use flash storage. For more information on all-flash and other storage configurations, ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docs/operations/configure/namespace/storage/index.html"},"see the Aerospike documentation for namespace storage configuration"),"."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This requires the Aerospike pod to be run in elevated privileged mode. In privileged mode when using index on flash, Aerospike Server tweaks the Kubernetes worker node's sysctls for Virtual Memory."))),(0,o.kt)("p",null,"To set this up, add the following to the Aerospike cluster's CR file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: asdb.aerospike.com/v1beta1\nkind: AerospikeCluster\nmetadata:\n  name: aerocluster\n  namespace: aerospike\n\nspec:\n  size: 2\n  image: aerospike/aerospike-server-enterprise:5.7.0.8\n\n  storage:\n    filesystemVolumePolicy:\n      initMethod: deleteFiles\n      cascadeDelete: true\n    blockVolumePolicy:\n      cascadeDelete: true\n    volumes:\n      - name: workdir\n        aerospike:\n          path: /opt/aerospike\n        source:\n          persistentVolume:\n            storageClass: ssd\n            volumeMode: Filesystem\n            size: 1Gi\n      - name: ns\n        aerospike:\n          path: /test/dev/xvdf\n        source:\n          persistentVolume:\n            storageClass: ssd\n            volumeMode: Block\n            size: 5Gi\n      - name: ns-index\n        aerospike:\n          path: /test/dev/xvdf-index\n        source:\n          persistentVolume:\n            storageClass: ssd\n            volumeMode: Filesystem\n            size: 5Gi\n      - name: aerospike-config-secret\n        source:\n          secret:\n            secretName: aerospike-secret\n        aerospike:\n          path: /etc/aerospike/secret\n\n  podSpec:\n    multiPodPerHost: true\n    aerospikeContainer:\n      securityContext:\n        privileged: true\n\n  aerospikeAccessControl:\n    users:\n      - name: admin\n        secretName: auth-secret\n        roles:\n          - sys-admin\n          - user-admin\n          - data-admin\n          - read\n          - write\n\n  aerospikeConfig:\n    service:\n      feature-key-file: /etc/aerospike/secret/features.conf\n    security: {}\n    network:\n      service:\n        port: 3000\n      fabric:\n        port: 3001\n      heartbeat:\n        port: 3002\n    namespaces:\n      - name: test\n        memory-size: 3000000000\n        replication-factor: 2\n        index-type:\n          type: flash\n          mounts:\n            - /test/dev/xvdf-index\n          mounts-size-limit: 4294967296\n        storage-engine:\n          type: device\n          devices:\n            - /test/dev/xvdf\n")),(0,o.kt)("p",null,"For the full CR file, see the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-kubernetes-operator/blob/master/config/samples/all_flash_cluster_cr.yaml"},"example all-flash cluster CR"),"."),(0,o.kt)("p",null,"This and other example CRs are stored in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-kubernetes-operator/tree/master/config/samples"},"the main Aerospike Kubernetes Operator repository"),"."),(0,o.kt)("p",null,"Save and exit the CR file, then use kubectl to apply the change."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f aerospike-cluster.yaml\n")))}m.isMDXComponent=!0}}]);