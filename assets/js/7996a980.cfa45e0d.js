"use strict";(self.webpackChunkwebsite_operator=self.webpackChunkwebsite_operator||[]).push([[4970],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(r),f=o,d=m["".concat(p,".").concat(f)]||m[f]||u[f]||a;return r?n.createElement(d,i(i({ref:t},l),{},{components:r})):n.createElement(d,i({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3290:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return m}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],s={title:"HDD Storage With Data In Memory",description:"HDD Storage With Data In Memory"},p=void 0,c={unversionedId:"HDD-storage-with-data-in-memory",id:"HDD-storage-with-data-in-memory",title:"HDD Storage With Data In Memory",description:"HDD Storage With Data In Memory",source:"@site/docs/HDD-storage-with-data-in-memory.md",sourceDirName:".",slug:"/HDD-storage-with-data-in-memory",permalink:"/kubernetes-operator/HDD-storage-with-data-in-memory",editUrl:"https://github.com/aerospike/kubernetes-operator/edit/main/docs/HDD-storage-with-data-in-memory.md",tags:[],version:"current",frontMatter:{title:"HDD Storage With Data In Memory",description:"HDD Storage With Data In Memory"},sidebar:"docsSidebar",previous:{title:"HDD Storage With Data In Index",permalink:"/kubernetes-operator/HDD-storage-with-data-in-index"},next:{title:"Shadow Device",permalink:"/kubernetes-operator/Shadow-device"}},l=[],u={toc:l};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This example lets you store namespace data both in memory and on the persistent device. For more information on setting up HDD storage with data-in-memory and other storage configurations, ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docs/operations/configure/namespace/storage/index.html"},"see the Aerospike documentation for namespace storage configuration"),"."),(0,a.kt)("p",null,"To set this up, add the following storage-specific configuration to the Aerospike cluster's CR file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"  storage:\n    filesystemVolumePolicy:\n      cascadeDelete: false\n      initMethod: deleteFiles\n    volumes:\n      - name: workdir\n        aerospike:\n          path: /opt/aerospike\n        source:\n          persistentVolume:\n            storageClass: ssd\n            volumeMode: Filesystem\n            size: 1Gi\n      - name: ns\n        aerospike:\n          path: /opt/aerospike/data\n        source:\n          persistentVolume:\n            storageClass: ssd\n            volumeMode: Filesystem\n            size: 3Gi\n      - name: aerospike-config-secret\n        source:\n          secret:\n            secretName: aerospike-secret\n        aerospike:\n          path: /etc/aerospike/secret\n  .\n  .\n  .\n  aerospikeConfig:\n    service:\n      feature-key-file: /etc/aerospike/secret/features.conf\n    security: {}\n    namespace:\n      - name: test\n        memory-size: 3000000000\n        replication-factor: 2\n        storage-engine:\n          type: device\n          file:\n            - /opt/aerospike/data/test.dat\n          filesize: 2000000000\n          data-in-memory: true\n")),(0,a.kt)("p",null,"For the full CR file, see the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-kubernetes-operator/blob/2.0.0/config/samples/hdd_dim_storage_cluster_cr.yaml"},"example HDD storage with data-in-memory cluster CR"),"."),(0,a.kt)("p",null,"This and other example CRs are stored in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-kubernetes-operator/tree/master/config/samples"},"the main Aerospike Kubernetes Operator repository"),"."),(0,a.kt)("p",null,"Save and exit the CR file, then use kubectl to apply the change."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f aerospike-cluster.yaml\n")))}m.isMDXComponent=!0}}]);