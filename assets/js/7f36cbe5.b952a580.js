"use strict";(self.webpackChunkwebsite_operator=self.webpackChunkwebsite_operator||[]).push([[9419],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(n),f=o,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||a;return n?r.createElement(d,s(s({ref:t},l),{},{components:n})):r.createElement(d,s({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},57:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return m}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={title:"Data On SSD",description:"Data On SSD"},c=void 0,p={unversionedId:"Data-on-SSD",id:"Data-on-SSD",title:"Data On SSD",description:"Data On SSD",source:"@site/docs/Data-on-SSD.md",sourceDirName:".",slug:"/Data-on-SSD",permalink:"/kubernetes-operator/next/Data-on-SSD",editUrl:"https://github.com/aerospike/kubernetes-operator/edit/main/docs/Data-on-SSD.md",tags:[],version:"current",frontMatter:{title:"Data On SSD",description:"Data On SSD"},sidebar:"docsSidebar",previous:{title:"Data In Memory",permalink:"/kubernetes-operator/next/Data-in-memory"},next:{title:"HDD Storage With Data In Index",permalink:"/kubernetes-operator/next/HDD-storage-with-data-in-index"}},l=[],u={toc:l};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The following storage configuration sets up the Aerospike cluster to store namespace data on a provisioned SSD storage device."),(0,a.kt)("p",null,"For more information on storing namespace data on SSD and other storage configurations, ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docs/operations/configure/namespace/storage/index.html"},"see the Aerospike documentation for namespace storage configuration"),"."),(0,a.kt)("p",null,"To set this up, add the following storage-specific configuration to the Aerospike cluster's CR file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"  storage:\n    filesystemVolumePolicy:\n      initMethod: deleteFiles\n      cascadeDelete: true\n    blockVolumePolicy:\n      cascadeDelete: true\n    volumes:\n      - name: workdir\n        aerospike:\n          path: /opt/aerospike\n        source:\n          persistentVolume:\n            storageClass: ssd\n            volumeMode: Filesystem\n            size: 1Gi\n      - name: ns\n        aerospike:\n          path: /test/dev/xvdf\n        source:\n          persistentVolume:\n            storageClass: ssd\n            volumeMode: Block\n            size: 5Gi\n      - name: aerospike-config-secret\n        source:\n          secret:\n            secretName: aerospike-secret\n        aerospike:\n          path: /etc/aerospike/secret\n\n  .\n  .\n  .\n  aerospikeConfig:\n    service:\n      feature-key-file: /etc/aerospike/secret/features.conf\n    security:\n      enable-security: true\n    namespaces:\n      - name: test\n        memory-size: 3000000000\n        replication-factor: 2\n        storage-engine:\n          type: device\n          devices:\n            - /test/dev/xvdf\n")),(0,a.kt)("p",null,"For the full CR file, see the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-kubernetes-operator/blob/master/config/samples/ssd_storage_cluster_cr.yaml"},"example SSD storage cluster CR"),"."),(0,a.kt)("p",null,"This and other example CRs are stored in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-kubernetes-operator/tree/master/config/samples"},"the main Aerospike Kubernetes Operator repository"),"."),(0,a.kt)("p",null,"Save and exit the CR file, then use kubectl to apply the change."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f aerospike-cluster.yaml\n")))}m.isMDXComponent=!0}}]);