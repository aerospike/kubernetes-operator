"use strict";(self.webpackChunkwebsite_operator=self.webpackChunkwebsite_operator||[]).push([[2659],{3905:function(e,r,n){n.d(r,{Zo:function(){return l},kt:function(){return f}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),p=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},l=function(e){var r=p(e.components);return t.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=o,k=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return n?t.createElement(k,a(a({ref:r},l),{},{components:n})):t.createElement(k,a({ref:r},l))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8379:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var t=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={title:"Modify Aerospike cluster",description:"Modify Aerospike cluster"},c=void 0,p={unversionedId:"Aerospike-configuration-change",id:"version-2.0.0-rc1/Aerospike-configuration-change",isDocsHomePage:!1,title:"Modify Aerospike cluster",description:"Modify Aerospike cluster",source:"@site/versioned_docs/version-2.0.0-rc1/Aerospike-configuration-change.md",sourceDirName:".",slug:"/Aerospike-configuration-change",permalink:"/kubernetes-operator/Aerospike-configuration-change",editUrl:"https://github.com/aerospike/kubernetes-operator/edit/main/versioned_docs/version-2.0.0-rc1/Aerospike-configuration-change.md",tags:[],version:"2.0.0-rc1",frontMatter:{title:"Modify Aerospike cluster",description:"Modify Aerospike cluster"},sidebar:"version-2.0.0-rc1/docsSidebar",previous:{title:"Aerospike Access Control",permalink:"/kubernetes-operator/Aerospike-access-control"},next:{title:"Version Upgrade",permalink:"/kubernetes-operator/Version-upgrade"}},l=[{value:"Change a config in the aerospikeConfig section",id:"change-a-config-in-the-aerospikeconfig-section",children:[]},{value:"Apply the change",id:"apply-the-change",children:[]},{value:"Check the pods",id:"check-the-pods",children:[]}],u={toc:l};function d(e){var r=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"For this example assume that cluster is deployed using a file named ",(0,i.kt)("inlineCode",{parentName:"p"},"aerospike-cluster.yaml"),"."),(0,i.kt)("h2",{id:"change-a-config-in-the-aerospikeconfig-section"},"Change a config in the aerospikeConfig section"),(0,i.kt)("p",null,"Change the ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.aerospikeConfig.service.proto-fd-max")," field in the aerocluster CR to ",(0,i.kt)("inlineCode",{parentName:"p"},"20000")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: asdb.aerospike.com/v1beta1\nkind: AerospikeCluster\nmetadata:\n  name: aerocluster\n  namespace: aerospike\nspec:\n  size: 2\n  image: aerospike/aerospike-server-enterprise:4.9.0.33\n  aerospikeConfig:\n    service:\n      proto-fd-max: 15000\n  .\n  .\n")),(0,i.kt)("h2",{id:"apply-the-change"},"Apply the change"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ kubectl apply -f aerospike-cluster.yaml\n")),(0,i.kt)("h2",{id:"check-the-pods"},"Check the pods"),(0,i.kt)("p",null,"Pods will undergo a rolling restart."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ kubectl get pods -n aerospike\nNAME          READY   STATUS              RESTARTS   AGE\naerocluster-0-0     1/1     Running         0          3m6s\naerocluster-0-1     1/1     Running         0          3m6s\naerocluster-0-2     1/1     Running         0          30s\naerocluster-0-3     1/1     Terminating     0          30s\n")),(0,i.kt)("p",null,"After all the pods have restarted, use ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl describe")," to get status of the cluster."),(0,i.kt)("p",null,"Check ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.aerospikeConfig.service.proto-fd-max")," in status."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ kubectl -n aerospike describe aerospikecluster aerocluster\nName:         aerocluster\nNamespace:    aerospike\nKind:         AerospikeCluster\n.\n.\nStatus:\n  Aerospike Config:\n    Service:\n      Proto - Fd - Max:   20000\n  .\n  .\n")))}d.isMDXComponent=!0}}]);